name: Create and publish docker image on ECR
on: workflow_dispatch
# The  below will trigger build on any push to main branch
#on:
#  push:
#    branches: main
#    tags:
#      - "*"
jobs:
  ecr_public:
    runs-on: ubuntu-latest
    name: ECR public action
    if: github.repository == 'castrapel/cloudumi'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install AWS CLI
        run: |-
          pip install awscli

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Public ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.NOQ_ECR_USER_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.NOQ_ECR_USER_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 259868150464.dkr.ecr.us-west-2.amazonaws.com
      - name: Build Image
        run: |
          docker build -t cloudumi .
      - name: Tag, and push unstable image to Amazon ECR
        run: |
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:unstable
          docker push 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:unstable
      - name: Tag, and push versioned image to ECR on tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Extract tags from version
          export NOQ_VERSION=$(python3 setup.py -q --version | sed -r 's/\+/\./g')
          export NOQ_MAJOR=$(cut -d '.' -f 1 <<< "$NOQ_VERSION")
          export NOQ_MINOR=$(cut -d '.' -f 1,2 <<< "$NOQ_VERSION")
          export NOQ_PATCH=$(cut -d '.' -f 1,2,3 <<< "$NOQ_VERSION")
          # Tag image
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:$NOQ_VERSION
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:$NOQ_MAJOR
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:$NOQ_MINOR
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:$NOQ_PATCH
          docker tag cloudumi 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi:latest
          docker push --all-tags 259868150464.dkr.ecr.us-west-2.amazonaws.com/cloudumi
      - name: Setup ECS CLI
        run: |-
          mkdir -p "$HOME/tools/ecs-cli"
          curl -Lo "$HOME/tools/ecs-cli/ecs-cli" https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
          chmod +x "$HOME/tools/ecs-cli/ecs-cli"
          echo "$HOME/tools/ecs-cli" >> $GITHUB_PATH
      - name: Deploy to ECS Fargate
        run: |-
          chmod +x deploy/ecs/staging-1/deploy.sh
          ./deploy/ecs/staging-1/deploy.sh
