load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@cloudumi_python_ext//:requirements.bzl", "requirement")

EXT_DEPS = [
    requirement("boto3"),
]
filegroup(
    name = "{{ stage }}-{{ attributes }}-files",
    srcs = glob([
        "*.yaml",
    ]),
    visibility = ["//visibility:public"],
)

container_push(
    name = "api-container-deploy-{{ stage }}",
    format = "Docker",
    repository = "{{ namespace }}-{{ stage }}-registry-api",
    image = "//api:container",
    registry = "{{ registry_repository_url }}",
    tag = "{{ stage }}",
    visibility = ["//visibility:public"],
)

container_push(
    name = "celery-container-deploy-{{ stage }}",
    format = "Docker",
    repository = "{{ namespace }}-{{ stage }}-registry-celery",
    image = "//common/celery_tasks:container",
    registry = "{{ registry_repository_url }}",
    tag = "{{ stage }}",
    visibility = ["//visibility:public"],
)

py_binary(
    name = "ecs_deployer",
    srcs_version = "PY3",
    data = [
    "{{ stage }}-{{ attributes }}-files",
    ],
    srcs = [
        "ecs_deployer.py",
    ],
    deps = EXT_DEPS,
    visibility = ["//visibility:public"],
)

genrule(
    name = "destroy",
    srcs = [
        ":{{ stage }}-{{ attributes }}-files",
    ],
    executable = True,
    outs = ["run_destroy_{{ stage }}"],
    message = "Destroying CloudUmi in {{ stage }}...",
    cmd = "ecs-cli compose -f deploy/infrastructure/live/{{ namespace }}/{{ stage }}-{{ attributes }}/compose.yaml \
           -p {{ ecs_cluster_name }} service rm \
           \
           ecs-cli down --cluster-config {{ ecs_cluster_name }}; >$@",
    tags = ["manual"],
)