Resources:
  CentralRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref ClusterRoleParameter
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalIDParameter
      RoleName: !Ref CentralRoleNameParameter
      Policies:
        - PolicyName: !Join
            - "-"
            - - "central-account-policy"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "access-analyzer:*"
                  - "cloudtrail:*"
                  - "cloudwatch:*"
                  - "config:SelectResourceConfig"
                  - "config:SelectAggregateResourceConfig"
                  - "dynamodb:batchgetitem"
                  - "dynamodb:batchwriteitem"
                  - "dynamodb:deleteitem"
                  - "dynamodb:describe*"
                  - "dynamodb:getitem"
                  - "dynamodb:getrecords"
                  - "dynamodb:getsharditerator"
                  - "dynamodb:putitem"
                  - "dynamodb:query"
                  - "dynamodb:scan"
                  - "dynamodb:updateitem"
                  - "dynamodb:CreateTable"
                  - "dynamodb:UpdateTimeToLive"
                  - "sns:createplatformapplication"
                  - "sns:createplatformendpoint"
                  - "sns:deleteendpoint"
                  - "sns:deleteplatformapplication"
                  - "sns:getendpointattributes"
                  - "sns:getplatformapplicationattributes"
                  - "sns:listendpointsbyplatformapplication"
                  - "sns:publish"
                  - "sns:setendpointattributes"
                  - "sns:setplatformapplicationattributes"
                  - "sts:assumerole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ses:sendmail"
                  - "ses:sendrawemail"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "autoscaling:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "config:BatchGet*"
                  - "config:List*"
                  - "config:Select*"
                  - "ec2:DescribeSubnets"
                  - "ec2:describevpcendpoints"
                  - "ec2:DescribeVpcs"
                  - "iam:GetAccountAuthorizationDetails"
                  - "iam:ListAccountAliases"
                  - "iam:ListAttachedRolePolicies"
                  - "ec2:describeregions"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketTagging"
                  - "s3:ListAllMyBuckets"
                  - "s3:ListBucket"
                  - "s3:PutBucketPolicy"
                  - "s3:PutBucketTagging"
                  - "sns:GetTopicAttributes"
                  - "sns:ListTagsForResource"
                  - "sns:ListTopics"
                  - "sns:SetTopicAttributes"
                  - "sns:TagResource"
                  - "sns:UnTagResource"
                  - "sqs:GetQueueAttributes"
                  - "sqs:GetQueueUrl"
                  - "sqs:ListQueues"
                  - "sqs:ListQueueTags"
                  - "sqs:SetQueueAttributes"
                  - "sqs:TagQueue"
                  - "sqs:UntagQueue"
                Resource: "*"
  SpokeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CentralRole.Arn
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
      RoleName: !Ref SpokeRoleNameParameter
      Policies:
        - PolicyName: "spoke-acct-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "autoscaling:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "config:BatchGet*"
                  - "config:List*"
                  - "config:Select*"
                  - "ec2:describeregions"
                  - "ec2:DescribeSubnets"
                  - "ec2:describevpcendpoints"
                  - "ec2:DescribeVpcs"
                  # We need to start breaking iam:* apart
                  - "iam:*"
                  - "iam:GenerateServiceLastAccessedDetails"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketTagging"
                  - "s3:ListAllMyBuckets"
                  - "s3:ListBucket"
                  - "s3:PutBucketPolicy"
                  - "s3:PutBucketTagging"
                  - "sns:GetTopicAttributes"
                  - "sns:ListTagsForResource"
                  - "sns:ListTopics"
                  - "sns:SetTopicAttributes"
                  - "sns:TagResource"
                  - "sns:UnTagResource"
                  - "sqs:GetQueueAttributes"
                  - "sqs:GetQueueUrl"
                  - "sqs:ListQueues"
                  - "sqs:ListQueueTags"
                  - "sqs:SetQueueAttributes"
                  - "sqs:TagQueue"
                  - "sqs:UntagQueue"
                Resource: "*"
  SnsCustomResource:
    Type: "Custom::SnsCustomResource"
    DeletionPolicy: Retain
    Properties:
      ServiceToken: !Ref RegistrationTopicArnParameter
      IntegrationName: !Ref "AWS::StackName"
      ExternalId: !Ref ExternalIDParameter
      ClusterRole: !Ref ClusterRoleParameter
      CentralRoleArn: !GetAtt CentralRole.Arn
      SpokeRole: !Ref SpokeRoleNameParameter
      SpokeRoleArn: !GetAtt SpokeRole.Arn
      Host: !Ref HostParameter
      ActionType: "AWSCentralAcctRegistration"
      TemplateVersion: 1.5
      AWSAccountId: !Ref "AWS::AccountId"
Parameters:
  ExternalIDParameter:
    Description: >-
      The cross-account access role created by the stack will use this value for
      its ExternalID. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "100"
    AllowedPattern: '[\w+=,.@:\/-]*'
    ConstraintDescription: 'Invalid ExternalID value.  Must match pattern [\w+=,.@:\/-]*'
  ClusterRoleParameter:
    Description: >-
      The SaaS Cluster role that will assume into the role created by this stack. Do not change this value!
    Type: String
    MinLength: "10"
    MaxLength: "100"
    AllowedPattern: '^arn:aws:iam::\d{12}:(role|user)/.+'
    ConstraintDescription: 'Invalid ClusterRole value.  Must match pattern ^arn:aws:iam::\d{12}:role/.+'
  HostParameter:
    Description: >-
      The host parameter. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "100"
    AllowedPattern: '[\w+_-]*'
    ConstraintDescription: 'Invalid Host value.  Must match pattern [\w+_-]*'
  CentralRoleNameParameter:
    Description: >-
      The name of the Central role in the customer's environment. Do not change this value!
    Type: String
    MinLength: "10"
    MaxLength: "100"
    AllowedPattern: '[\w+_-]*'
    ConstraintDescription: 'Invalid CentralRoleName value.  Must match pattern [\w+_-]*'
  SpokeRoleNameParameter:
    Description: >-
      The name of the spoke role in each customer account. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "100"
    AllowedPattern: '[\w+_-]*'
    ConstraintDescription: 'Invalid SpokeRoleName value.  Must match pattern [\w+_-]*'
  RegistrationTopicArnParameter:
    Description: >-
      The SNS queue ARN that will be used to send registration messages to the SaaS. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "100"
    AllowedPattern: '^arn:aws:sns:[\w-]*:\d{12}:.+'
    ConstraintDescription: 'Invalid RegistrationTopicArn value.  Must match pattern ^arn:aws:sns:[\w-]*:\d{12}:.+'
Outputs:
  ExternalID:
    Description: ExternalID to share with the SaaS for assume-role deployments
    Value: !Ref ExternalIDParameter
  Host:
    Description: Host to share with the SaaS for deployment
    Value: !Ref HostParameter
  ClusterRole:
    Description: ClusterRole to share with the SaaS for deployment
    Value: !Ref ClusterRoleParameter
  CentralRoleArn:
    Description: CentralRoleArn to share with the SaaS for deployment
    Value: !GetAtt CentralRole.Arn
  SpokeRole:
    Description: SpokeRole to share with the SaaS for deployment
    Value: !Ref SpokeRoleNameParameter
  SpokeRoleArn:
    Description: SpokeRoleArn to share with the SaaS for deployment
    Value: !GetAtt SpokeRole.Arn
  CentralRoleName:
    Description: The name of the Central (hub) role in customer's environment
    Value: !Ref CentralRoleNameParameter
  SpokeRoleName:
    Description: The name of the spoke role in each customer account.
    Value: !Ref SpokeRoleNameParameter
  RegistrationTopicArn:
    Description: SNS Registration topic ARN
    Value: !Ref RegistrationTopicArnParameter
