Resources:
  SpokeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref NoqCentralRoleArnParameter
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
      RoleName: !Ref NoqTerraformApplyRole
      Policies:
        - PolicyName: "Permissions_Needed_For_TF_Apply"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - acm:AddTagsToCertificate
                  - acm:DescribeCertificate
                  - acm:ListTagsForCertificate
                  - acm:RequestCertificate
                  - autoscaling:DescribeScalableTargets
                  - autoscaling:DescribeScalingPolicies
                  - autoscaling:PutScalingPolicy
                  - autoscaling:RegisterScalableTarget
                  - dax:CreateCluster
                  - dax:CreateParameterGroup
                  - dax:CreateSubnetGroup
                  - dax:DescribeClusters
                  - dax:DescribeParameterGroups
                  - dax:DescribeParameters
                  - dax:DescribeSubnetGroups
                  - dax:ListTags
                  - dax:UpdateParameterGroup
                  - dynamodb:CreateTable
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:DescribeTable
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:GetItem
                  - dynamodb:ListTagsOfResource
                  - dynamodb:PutItem
                  - dynamodb:UpdateContinuousBackups
                  - dynamodb:UpdateTimeToLive
                  - ec2:AllocateAddress
                  - ec2:AssociateRouteTable
                  - ec2:AttachInternetGateway
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:CreateFlowLogs
                  - ec2:CreateInternetGateway
                  - ec2:CreateNatGateway
                  - ec2:CreateRoute
                  - ec2:CreateRouteTable
                  - ec2:CreateSecurityGroup
                  - ec2:CreateSubnet
                  - ec2:CreateVpc
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeAddresses
                  - ec2:DescribeFlowLogs
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeNatGateways
                  - ec2:DescribeNetworkAcls
                  - ec2:DescribeRouteTables
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcAttribute
                  - ec2:DescribeVpcClassicLink
                  - ec2:DescribeVpcClassicLinkDnsSupport
                  - ec2:DescribeVpcs
                  - ec2:ModifyVpcAttribute
                  - ec2:RevokeSecurityGroupEgress
                  - ecr:CreateRepository
                  - ecr:DescribeRepositories
                  - ecr:ListTagsForResource
                  - ecs:CreateCluster
                  - ecs:DescribeClusters
                  - elasticache:CreateCacheCluster
                  - elasticache:CreateCacheParameterGroup
                  - elasticache:CreateCacheSubnetGroup
                  - elasticache:CreateReplicationGroup
                  - elasticache:DescribeCacheClusters
                  - elasticache:DescribeCacheParameterGroups
                  - elasticache:DescribeCacheParameters
                  - elasticache:DescribeCacheSubnetGroups
                  - elasticache:DescribeReplicationGroups
                  - elasticache:ListTagsForResource
                  - elasticache:ModifyCacheParameterGroup
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeTags
                  - elasticloadbalancing:DescribeTargetGroupAttributes
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                  - elasticloadbalancing:SetSecurityGroups
                  - email:GetIdentityMailFromDomainAttributes
                  - email:GetIdentityVerificationAttributes
                  - email:SetIdentityMailFromDomain
                  - email:VerifyEmailIdentity
                  - iam:CreateRole
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListAttachedRolePolicies
                  - iam:ListRolePolicies
                  - iam:PutRolePolicy
                  - kms:CreateAlias
                  - kms:CreateKey
                  - kms:DescribeKey
                  - kms:EnableKeyRotation
                  - kms:GetKeyPolicy
                  - kms:GetKeyRotationStatus
                  - kms:ListAliases
                  - kms:ListResourceTags
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:ListTagsLogGroup
                  - logs:PutRetentionPolicy
                  - route53:ChangeResourceRecordSets
                  - route53:GetChange
                  - route53:GetHostedZone
                  - route53:ListHostedZones
                  - route53:ListResourceRecordSets
                  - route53:ListTagsForResource
                  - s3:CreateBucket
                  - s3:GetBucketAccelerateConfiguration
                  - s3:GetBucketAcl
                  - s3:GetBucketCors
                  - s3:GetBucketEncryption
                  - s3:GetBucketLifecycleConfiguration
                  - s3:GetBucketLogging
                  - s3:GetBucketPolicy
                  - s3:GetBucketReplication
                  - s3:GetBucketRequestPayment
                  - s3:GetBucketTagging
                  - s3:GetBucketVersioning
                  - s3:GetBucketWebsite
                  - s3:GetObject
                  - s3:GetObjectLockConfiguration
                  - s3:GetPublicAccessBlock
                  - s3:HeadBucket
                  - s3:ListObjects
                  - s3:PutBucketEncryption
                  - s3:PutBucketLifecycleConfiguration
                  - s3:PutBucketLogging
                  - s3:PutBucketPolicy
                  - s3:PutBucketTagging
                  - s3:PutBucketVersioning
                  - s3:PutObject
                  - s3:PutPublicAccessBlock
                  - secretsmanager:CreateSecret
                  - secretsmanager:DescribeSecret
                  - secretsmanager:GetResourcePolicy
                  - sns:CreateTopic
                  - sns:GetSubscriptionAttributes
                  - sns:GetTopicAttributes
                  - sns:ListTagsForResource
                  - sns:SetTopicAttributes
                  - sns:Subscribe
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
                  - sqs:ListQueueTags
                  - sqs:SetQueueAttributes
                Resource: "*"

Parameters:
  CompanyAccountParameter:
    Description: The company's AWS account number
    Type: String

  CompanyNameParameter:
    Description: The name of the company
    Type: String

  CompanyStageParameter:
    Description: The type of AWS account that this role will deploy into (staging, ${CompanyStageParameter}, etc)
    Type: String
    Default: ${CompanyStageParameter}

  NoqCentralRoleArnParameter:
    Description: The role used by Noq to assume this role, to be created, and deploy the Noq infrastructure using Terraform
    Type: String
    MinLength: "2"
    MaxLength: "100"
    AllowedPattern: ^arn:aws:iam::\d{12}:role/.+
    ConstraintDescription: Invalid CentralRoleArn value.  Must match pattern ^arn:aws:iam::\d{12}:role/.+ with a length between 2-100

  NoqTerraformApplyRole:
    Description: The role name that is going to be created and used to setup the Noq infrastructure
    Type: String
    MinLength: "6"
    MaxLength: "50"
    Default: "NoqSoftwareTerraformApplyRole"

Outputs:
  NoqTerraformApplyRole:
    Description: The role that Noq will use to setup the infrastructure in the environment
    Value: !Ref NoqTerraformApplyRole
