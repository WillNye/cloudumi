Resources:
  CloudUmiTaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - "sts:AssumeRole"
          - Effect: Allow
            Principal:
              AWS:
                - !Ref CloudUmiCentralAcctArn
            Action:
              - "sts:AssumeRole"
      RoleName: !Join
        - "-"
        - - "cloudumi-spoke-role"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Policies:
        - PolicyName: !Join
            - "-"
            - - "cloudumi-spoke-acct-policy-ecs"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "autoscaling:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "config:BatchGet*"
                  - "config:List*"
                  - "config:Select*"
                  - "ec2:describeregions"
                  - "ec2:DescribeSubnets"
                  - "ec2:describevpcendpoints"
                  - "ec2:DescribeVpcs"
                  - "iam:*"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketTagging"
                  - "s3:ListAllMyBuckets"
                  - "s3:ListBucket"
                  - "s3:PutBucketPolicy"
                  - "s3:PutBucketTagging"
                  - "sns:GetTopicAttributes"
                  - "sns:ListTagsForResource"
                  - "sns:ListTopics"
                  - "sns:SetTopicAttributes"
                  - "sns:TagResource"
                  - "sns:UnTagResource"
                  - "sqs:GetQueueAttributes"
                  - "sqs:GetQueueUrl"
                  - "sqs:ListQueues"
                  - "sqs:ListQueueTags"
                  - "sqs:SetQueueAttributes"
                  - "sqs:TagQueue"
                  - "sqs:UntagQueue"
                Resource: "*"
  CloudUmiSnsCustomResource:
    Type: "Custom::CloudUmiSnsCustomResource"
    Properties:
      ServiceToken: arn:aws:sns:us-east-1:259868150464:noq_registration
      IntegrationName: !Ref "AWS::StackName"
      ExternalId: !Ref ExternalIDParameter
      ActionType: "AWSSpokeAcctRegistration"
      Account: cloudumi
      TemplateVersion: 1.5
      AWSAccountId: !Ref "AWS::AccountId"
Parameters:
  ExternalIDParameter:
    Description: >-
      The cross-account access role created by the stack will use this value for
      its ExternalID. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "1224"
    AllowedPattern: '[\w=,.@:\/-]*'
    ConstraintDescription: 'Invalid ExternalID value.  Must match pattern [\w+=,.@:\/-]*'
  CloudUmiCentralAcctArn:
    Description: >-
      The cross account role that will be allowed to assume this spoke role account.
    Type: String
    MinLength: "2" # iam role arn is around 61 with stackid at the end usually
    MaxLength: "1224" # see above
    #AllowedPattern: '[\w\d\/-:]*'
    #ConstraintDescription: 'Invalid CloudUmiCentralAcctArn. Must match pattern [\w\d\/-:]*'
Outputs:
  ExternalID:
    Description: ExternalID to share with NOQ on Cloudumi credential deployments
    Value: !Ref ExternalIDParameter
  CloudUmiCentralAcctArn:
    Description: The cross accoutn role that will be allowed to assume this spoke role account.
    Value: !Ref CloudUmiCentralAcctArn
