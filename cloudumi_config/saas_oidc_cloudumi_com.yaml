site_configs:
  oidc_cloudumi_com:
    consoleme_s3_bucket: consolemecache
    boto3:
      client_kwargs:
        # http://localhost:4566
        endpoint_url: http://localstack1:4566
      session_kwargs:
        profile_name: localstack
    oidc_secrets:
      client_id: 0oaatebhlkuDajVAr4x6
      secret: A_SECRET
      client_scope:
        - email
        - groups
        - openid
    plugins:
      auth: cmsaas_auth
      aws: cmsaas_aws
      group_mapping: cmsaas_group_mapping
      internal_celery_tasks: cmsaas_celery_tasks
      metrics: cmsaas_metrics
      internal_config: cmsaas_config
      internal_routes: cmsaas_internal_routes
      internal_policies: cmsaas_policies
    extends:
      - example_config_header_auth.yaml
    url: https://oidc.cloudumi.com
    application_admin: bayareasec@gmail.com
    environment: dev
    development: true
    tornado:
      debug: true
      port: 8081
      xsrf: false
      xsrf_cookie_kwargs:
        samesite: strict
    dynamodb_server: http://localhost:8005 # Not allowed in non localhost configuration
    challenge_url:
      request_ip_must_match_challenge_creation_ip: true
    auth:
      get_user_by_password: false
      set_auth_cookie: true
      get_user_by_oidc: true
      force_redirect_to_identity_provider: false
    get_user_by_oidc_settings:
      resource: consoleme-oidc
      metadata_url: https://dev-876967.okta.com/oauth2/default/.well-known/oauth-authorization-server
      # If you have a metadata URL and it returns JSON with authorization_endpoint, token_endpoint, and jwks_uri, you do
      # not need to specify those values in the configuration.
      #authorization_endpoint: https://dev-123456.okta.com/oauth2/default/v1/authorize
      #token_endpoint: https://dev-123456.okta.com/oauth2/default/v1/token
      #jwks_uri: https://dev-123456.okta.com/oauth2/default/v1/keys
      jwt_verify: true
      jwt_email_key: email
      jwt_groups_key: groups
      grant_type: authorization_code
      id_token_response_key: id_token
      access_token_response_key: access_token
      access_token_audience: "consoleme"
    cloud_credential_authorization_mapping:
      role_tags:
        enabled: true
        authorized_groups_tags:
          - consoleme-authorized
        authorized_groups_cli_only_tags:
          - consoleme-owner-dl
          - consoleme-authorized-cli-only
    aws:
      issuer: YourCompany
      region: "us-east-1"
    celery:
      cache_resources_from_aws_config_across_accounts:
        enabled: false
    groups:
      can_edit_config:
        - configeditors@example.com
      can_admin_policies:
        - consoleme_admins@example.com
    jwt:
      email_key: email
    jwt_secret: usafasdfTp4`sSf-6E8\RAA
    support_contact: consoleme-support@example.com
    support_chat_url: https://www.example.com/slack/channel
    documentation_page: https://github.com/Netflix/consoleme/
    logging_levels:
      asyncio: WARNING
      boto3: CRITICAL
      boto: CRITICAL
      botocore: CRITICAL
      elasticsearch.trace: ERROR
      elasticsearch: ERROR
      nose: CRITICAL
      parso.python.diff: WARNING
      s3transfer: CRITICAL
      spectator.HttpClient: WARNING
      spectator.Registry: WARNING
      urllib3: ERROR