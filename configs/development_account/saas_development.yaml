# When running this locally, ensure your /etc/hosts file has the following configuration:
# 127.0.0.1 localhost redis-cluster cloudumi-dynamodb cloudumi-redis localstack1 localstack2 localstack3 cloudumidev.com cloudumisamldev.com
# TODO: Extends must NOT modify _global_. It must ONLY exist in the site_config specific namespace

# AWS_PROFILE=development/development_admin aws s3 cp saas_development.yaml s3://noq-tenant-configuration.node.dev1.259868150464.us-west-2/tenant_configurations/saas_development.yaml
extends:
  - AWS_SECRETS_MANAGER:arn:aws:secretsmanager:us-west-2:759357822767:secret:dev/noq-Gjvjay

_global_:
  data_location: ~/.config/noq/cache/
  profiler: yappi
  #  tracing:
  #    enabled: true
  #_development_run_celery_tasks_1_min: true
  metrics:
    cloudwatch:
      enabled: false
    fluent-bit:
      namespace: noq-develop
      max_threads: 10
      enabled: false
      log_file: "/var/log/saas_output.log"
      max_log_file_size: 6291456 # 6 megabyte
      config: configs/fluent-bit/fluent-bit.conf
      exe: /opt/fluent-bit/bin/fluent-bit
  web:
    path: "frontend/dist"
  landing_page_domains:
    - localhost
    - www.noq.localhost
    - noq.localhost
    - noq.dev
    - www.noq.dev
    - 127.0.0.1
    - registration.noq.dev
  deployment:
    domain_name: shared.noq.dev
    namespace: shared
    zone: noq.dev
    cluster_id: dev
  dynamodb_server: http://cloudumi-dynamodb:8005
  sentry:
    dsn: "https://18aff06afbd941fb92905ab1bccc4bd2@sentry.noq.dev:4443/3"
    traces_sample_rate: 1.0
  accounts:
    tenant_data:
      account_id: "350876197038"
      account_name: "development_2"
      role_arn: arn:aws:iam::350876197038:role/NoqServiceConnRole
      external_id: 018e23e8-9b41-4d66-85f2-3d60cb2b3c43
      region: us-west-2
    zelkova:
      name: ZelkovaAnalysisRole
      account_id: "894599878328"
      account_name: "zelkova"
      role_arn: arn:aws:iam::894599878328:role/ZelkovaAnalysisRole
      region: us-west-2
  s3_buckets:
    legal_docs: noq-development-2-test-bucket
  integrations:
    aws:
      account_id: "759357822767"
      central_role_name: NoqCentralRoleLocalDev
      spoke_role_name: NoqSpokeRoleLocalDev
      node_role: arn:aws:iam::759357822767:role/NoqSaasRoleLocalDev
      stage: prod
      region: us-west-2
      attributes: 1
      registration_topic_arn: arn:aws:sns:us-west-2:759357822767:local-dev-registration-topic
      registration_queue_arn: arn:aws:sqs:us-west-2:759357822767:local-dev-registration-queue
      registration_central_role_cf_template: "https://s3.us-east-1.amazonaws.com/cloudumi-cf-templates/cloudumi_central_role.yaml"
      registration_spoke_role_cf_template: "https://s3.us-east-1.amazonaws.com/cloudumi-cf-templates/cloudumi_spoke_role.yaml"
  logging:
    file: ./cloudumi_tornado.log
  # sentry:
  #   dsn: http://c431e275be51424e98734f222cca6c47@sentry.noq.dev:9000/1
  s3_cache_bucket: noq-local-dev-cache
  s3_slack_installation_store_bucket: noq-local-dev-slack-installation-store
  s3_cache_bucket_region: us-west-2
  environment: dev
  development: true
  site_configs:
    localhost:
      secrets:
        jwt_secret: N21JlTYDJEtpy-kHb-j8sAxkdS7mb4IY1wcueWJfpZ8
  tornado:
    debug: false
    port: 8092
    xsrf: false # TODO: Change to true when not testing locally
    xsrf_cookie_kwargs:
      samesite: strict
  plugins:
    auth: cmsaas_auth
    aws: cmsaas_aws
    group_mapping: cmsaas_group_mapping
    internal_celery_tasks: cmsaas_celery_tasks
    #metrics: cmsaas_metrics
    metrics: fluent_bit # enable as needed
    internal_config: cmsaas_config
    internal_routes: cmsaas_internal_routes
    internal_policies: cmsaas_policies
  celery:
    clear_tasks_for_development: false
    purge: true
    broker:
      us-east-1: rediss://:{password}@cloudumi-redis:6379/1?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
      us-west-2: rediss://:{password}@cloudumi-redis:6379/1?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
      global: rediss://:{password}@cloudumi-redis:6379/1?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
    backend:
      us-east-1: rediss://:{password}@cloudumi-redis:6379/2?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
      us-west-2: rediss://:{password}@cloudumi-redis:6379/2?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
      global: rediss://:{password}@cloudumi-redis:6379/2?ssl_ca_certs={ssl_ca_certs}&ssl_cert_reqs=required
    debug: true
  # Saas Configuration
  ses_notifications_sender_identity: arn:aws:ses:us-west-2:759357822767:identity/notifications@noq.dev
  redis:
    host:
      global: cloudumi-redis
    ssl: true
    ssl_ca_certs: ./deploy/local/redis/tests/tls/ca.crt
    password: s2dKdXxjHeCQwoYZ
    cluster_mode:
      enabled: false
      nodes:
        global:
          - host: cloudumi-redis
            port: 6379
  secrets:
    postgresql:
      username: noq
      password: local_dev
  noq_db:
    endpoint: "localhost"
    port: 5432
    database: "noq"
  tenant_registration:
    set_login_page_ui:
      logo_location: frontend/src/assets/NoqLogo.png
  git:
    repo_base_path: ~/.noq/git_repos
  tenant_storage:
    base_path: ~/.config/noq/tenant_storage_dev/
# Localhost configuration
#  redis:
#    cluster_mode:
#      enabled: true
#      nodes:
#        - host: 127.0.0.1
#          port: "7000"
#        - host: 127.0.0.1
#          port: "7001"
#        - host: 127.0.0.1
#          port: "7002"
#        - host: 127.0.0.1
#          port: "7003"
#        - host: 127.0.0.1
#          port: "7004"
#        - host: 127.0.0.1
#          port: "7005"
# TBD: Celery Redis configuration
