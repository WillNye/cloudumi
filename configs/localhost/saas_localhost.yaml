site_configs:
  localhost:
    boto3:
      client_kwargs:
        # http://localhost:4568
        endpoint_url: http://localstack3:4566
      session_kwargs:
        profile_name: localstack
    dynamodb_server: http://cloudumi-dynamodb:8005 # Not allowed in non localhost configuration
    # Customer controlled
    identity:
      cache_groups:
        enabled: true
      identity_providers:
        okta_test:
          name: okta_test
          idp_type: okta
          org_url: https://dev-876967.okta.com/
          # TODO: No secrets should be in plaintext configuration
          api_token: 00T8xmegwdOppNEJxE33AyGg7EG3nIQAeHcUmmPb2u
    # Customer controlled (Need to instruct them to give us write access
    consoleme_s3_bucket: consolemecache
    jwt_secret: local_secret_insecure # TODO: Autogenerate this during tenant creation
    #    policies:
    #      # the roles that SaaS consoleMe should assume to get to the central role in a client's account
    #      pre_role_arns_to_assume:
    #        - arn:aws:iam::259868150464:role/ConsoleMeCentralRole
    #      # The name of the role in each of the customer's accounts (spoke role) that ConsoleMe should assume
    #      role_name: ConsoleMe
    #    cache_cloud_accounts:
    #      from_aws_organizations: true
    #    cache_accounts_from_aws_organizations:
    #      - organizations_master_account_id: "259868150464"
    celery:
      cache_resources_from_aws_config_across_accounts:
        enabled: false # This is only needed for Localstack usage
    url: http://localhost # Generated and controlled by SaaS
    application_admin: ccastrapel@gmail.com # TODO: How do we know if this is a user or group
    environment: dev
    development: true
    _development_user_override: ccastrapel@gmail.com # Not allowed in non localhost configuration
    _development_groups_override: # Not allowed in non localhost configuration
      - groupa@example.com
      - groupb@example.com
      - configeditors@example.com
      - consoleme_admins@example.com
      - consoleme_admins
    challenge_url:
      enabled: true
      request_ip_must_match_challenge_creation_ip: false
    auth:
      get_groups_by_header: true
      get_user_by_header: true
      groups_header_name: group_header
      user_header_name: user_header
    cloud_credential_authorization_mapping:
      role_tags:
        enabled: true
        authorized_groups_tags:
          - consoleme-authorized
        authorized_groups_cli_only_tags:
          - consoleme-owner-dl
          - consoleme-authorized-cli-only
    aws:
      issuer: https://localhost
      region: "us-east-1"
    groups:
      can_edit_config:
        - configeditors@example.com
      can_admin_policies:
        - consoleme_admins@example.com
        - ccastrapel@gmail.com
    jwt:
      email_key: email
    support_contact: consoleme-support@example.com
    support_chat_url: https://www.example.com/slack/channel
    documentation_page: https://github.com/Netflix/consoleme/
