# After modifying this file, run the following command to regenerate the Pydantic models file stored at
# consoleme/models.py:
# `datamodel-codegen --input swagger.yaml  --output ../models.py --base-class common.lib.pydantic.BaseModel ; black ../models.py`
openapi: 3.0.0
info:
  description: ConsoleMe API definition
  version: "2.0.0"
  title: ConsoleMe v2 API
  contact:
    email: consoleme-owners@netflix.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.txt
servers:
  - url: "{server}/api/v2"
    variables:
      server:
        default: https://consoleme.example.com
tags:
  - name: roles
    description: IAM Role endpoints
  - name: requests
    description: Policy Request endpoints
  - name: privileged
    description: Endpoints requiring elevated permissions
  - name: policies
    description: Policies endpoints
  - name: apps
    description: Endpoints used by apps (such as weep)
paths:
  /request:
    post:
      summary: submit a new request
      tags:
        - requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreationModel"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedRequestModel"
  /requests:
    get:
      summary: get a list of requests
      tags:
        - requests
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RequestModel"
  /requests/{request_id}:
    get:
      summary: get details about a request
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/RequestId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedRequestModel"
    put:
      summary: update a request
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/RequestId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendedRequestModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedRequestModel"
  /generate_changes:
    post:
      summary: get templated changes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                anyOf:
                  - $ref: "#/components/schemas/ChangeGeneratorModelArray"
                discriminator:
                  propertyName: generator_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InlinePolicyChangeModel"
                  - $ref: "#/components/schemas/ManagedPolicyChangeModel"
                  - $ref: "#/components/schemas/ResourcePolicyChangeModel"
                discriminator:
                  propertyName: change_type
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /resources:
    get:
      summary: get resources
      parameters:
        - $ref: "#/components/parameters/AccountIdQueryString"
        - $ref: "#/components/parameters/ResourceTypeQueryString"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /typeahead/resources:
    get:
      summary: typeahead for all known resource ARNs
      parameters:
        - $ref: "#/components/parameters/TypeAheadQueryString"
        - $ref: "#/components/parameters/AccountIdQueryString"
        - $ref: "#/components/parameters/ResourceTypeQueryString"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArnArray"
  /clone/role:
    post:
      summary: clone a role
      tags:
        - privileged
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneRoleRequestModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCloneRequestResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /managed_policies_on_role/{account_id}/{role_name}:
    get:
      summary: get details about managed policies attached to a role
      tags:
        - managed_policies
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
  /service_control_policies/{account_or_ou_id}:
    get:
      summary: get details about service control policies targeting an account or organizational unit
      tags:
        - service_control_policies
      parameters:
        - $ref: "#/components/parameters/AccountOrOuId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
  /roles:
    get:
      summary: get a list of roles
      tags:
        - roles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AwsPrincipalModel"
    post:
      summary: create a role
      tags:
        - roles
        - privileged
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleCreationRequestModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCloneRequestResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /roles/{account_id}:
    get:
      summary: get a list of roles in an account
      tags:
        - roles
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AwsPrincipalModel"
    post:
      summary: create a role
      tags:
        - roles
        - privileged
      parameters:
        - $ref: "#/components/parameters/AccountId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
  /api/v3/automatic_policy_request_handler/aws:
    get:
      summary: get a list of automated policy requests
      tags:
        - policies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAutomaticPolicyRequest"
    post:
      summary: Request the automatic policy workflow to be triggered with the provided info
      tags:
        - policies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomaticPolicyRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAutomaticPolicyRequest"
  /api/v3/automatic_policy_request_handler/aws/{account_id}/{policy_request_id}:
    patch:
      summary: Update the status for a policy request
      tags:
        - roles
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/PolicyRequestId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: The updated policy request status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAutomaticPolicyRequest"
  /roles/{account_id}/{role_name}:
    get:
      summary: get details about a role
      tags:
        - roles
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
    put:
      summary: update a role
      tags:
        - roles
        - privileged
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
    delete:
      summary: delete a role
      tags:
        - roles
        - privileged
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /roles/{account_id}/{role_name}/elevated-access-config:
    put:
      summary: update a role
      tags:
        - roles
        - privileged
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrincipalModelTearConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
  /user:
    get:
      summary: get details about current user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserModel"
  /mtls/roles/{account_id}/{role_name}:
    delete:
      summary: delete a role (mtls apps only)
      tags:
        - roles
        - privileged
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: get details about a role (mtls apps/users only)
      tags:
        - roles
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedAwsPrincipalModel"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /policies/check:
    post:
      summary: check a policy document
      tags:
        - policies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyCheckModel"
  /get_resource_url:
    get:
      summary: get a resource URL from an ARN
      tags:
        - apps
      parameters:
        - in: query
          name: arn
          schema:
            type: string
          description: The AWS ARN to get the resource URL for
      responses:
        "200":
          description: OK - the URL was successfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
        "404":
          description: Missing or Malformed data, please check errors for details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
  /audit/roles:
    get:
      summary: retrieve a list of IAM roles
      tags:
        - audit
      parameters:
        - $ref: "#/components/parameters/PageQueryString"
        - $ref: "#/components/parameters/CountQueryString"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
  /audit/roles/{account_id}/{role_name}/access:
    get:
      summary: retrieve a list of groups with access to the specified role
      tags:
        - audit
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/RoleName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
        "404":
          description: Missing or Malformed data, please check errors for details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
components:
  responses:
    DefaultErrorResponse:
      description: An error occured, please refer to the message for details
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiErrorModel"
  parameters:
    AccountId:
      name: account_id
      in: path
      required: true
      example: 012345678901
      schema:
        type: string
        pattern: '^\d{12}$'
    AccountOrOuId:
      name: account_or_ou_id
      in: path
      required: true
      example: 012345678901
      schema:
        type: string
        pattern: '^(\d{12}|ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$'
    RoleName:
      name: role_name
      in: path
      required: true
      example: fake_account_admin
      schema:
        type: string
    RequestId:
      name: request_id
      in: path
      required: true
      example: 16fd2706-8baf-433b-82eb-8c7fada847da
      schema:
        type: string
    AccountIdQueryString:
      name: account_id
      in: query
      example: 012345678901
      schema:
        type: string
        pattern: '^\d{12}$'
    TypeAheadQueryString:
      name: typeahead
      in: query
      example: con
      schema:
        type: string
    ResourceTypeQueryString:
      name: resource_type
      in: query
      example: sqs
      schema:
        type: string
    PolicyRequestId:
      name: policy_request_id
      in: query
      schema:
        type: string
    LimitQueryString:
      name: limit
      in: query
      example: 20
      schema:
        type: integer
    PageQueryString:
      name: page
      in: query
      example: 0
      schema:
        type: integer
    CountQueryString:
      name: count
      in: query
      example: 1000
      schema:
        type: integer
  schemas:
    ActionResult:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    Action:
      type: string
      enum:
        - attach
        - detach
      default: attach
    ResourceModel:
      type: object
      required:
        - arn
        - name
        - resource_type
      properties:
        arn:
          description: resource ARN
          type: string
          readOnly: true
        name:
          description: Resource Name
          type: string
        account_id:
          description: AWS account ID
          type: string
          readOnly: true
        region:
          description: Region
          type: string
          readOnly: true
        account_name:
          description: human-friendly AWS account name
          type: string
          readOnly: true
        policy_sha256:
          description: hash of the most recent resource policy seen by ConsoleMe
          type: string
          readOnly: true
        policy:
          type: string
        # "actions" is used in the self-service request flow to store the IAM actions requested on a particular resource
        actions:
          type: array
          items:
            type: string
        owner:
          description: email address of team or individual who owns this resource
          type: string
        approvers:
          type: array
          items:
            type: string
        resource_type:
          type: string
        last_updated:
          description: last time resource was updated from source-of-truth
          type: string
          format: date-time
    RequestModel:
      type: object
      required:
        - principal
        - timestamp
        - requester_email
        - approvers
        - request_status
      properties:
        id:
          type: string
          readOnly: true
        request_url:
          type: string
        principal:
          anyOf:
            - $ref: "#/components/schemas/AwsResourcePrincipalModel"
            - $ref: "#/components/schemas/HoneybeeAwsResourceTemplatePrincipalModel"
            - $ref: "#/components/schemas/TerraformAwsResourcePrincipalModel"
        timestamp:
          type: string
          format: date-time
        justification:
          type: string
        requester_email:
          type: string
        approvers:
          description: list of approvers, derived from approvers of `resource`s in `changes`
          type: array
          items:
            type: string
          readOnly: true
        request_status:
          type: string
          enum:
            - pending
            - cancelled
            - approved
            - rejected
            - expired
        cross_account:
          description: if true, the request touches cross-account resources
          type: boolean
        arn_url:
          type: string
          description: the principal arn's URL
          readOnly: true
        admin_auto_approve:
          type: boolean
          default: False
    ExtendedRequestModel:
      allOf:
        - $ref: "#/components/schemas/RequestModel"
        - type: object
          required:
            - changes
            - requester_info
          properties:
            changes:
              $ref: "#/components/schemas/ChangeModelArray"
            requester_info:
              $ref: "#/components/schemas/UserModel"
            reviewer:
              type: string
            comments:
              type: array
              items:
                $ref: "#/components/schemas/CommentModel"
            expiration_date:
              type: integer
              example: 20210905
              description: Date to expire requested policy or role, in the format of YYYYmmdd
    ChangeGeneratorModelArray:
      type: object
      required:
        - changes
      properties:
        changes:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/S3ChangeGeneratorModel"
              - $ref: "#/components/schemas/SQSChangeGeneratorModel"
              - $ref: "#/components/schemas/SNSChangeGeneratorModel"
              - $ref: "#/components/schemas/SESChangeGeneratorModel"
              - $ref: "#/components/schemas/CrudChangeGeneratorModel"
              - $ref: "#/components/schemas/GenericChangeGeneratorModel"
              - $ref: "#/components/schemas/CustomIamChangeGeneratorModel"
    ChangeGeneratorModel:
      type: object
      required:
        - generator_type
        - arn
      properties:
        principal:
          anyOf:
            - $ref: "#/components/schemas/AwsResourcePrincipalModel"
            - $ref: "#/components/schemas/HoneybeeAwsResourceTemplatePrincipalModel"
            - $ref: "#/components/schemas/TerraformAwsResourcePrincipalModel"
        generator_type:
          type: string
          enum:
            - advanced
            - crud_lookup
            - ec2
            - generic
            - rds
            - route53
            - s3
            - ses
            - sns
            - sqs
            - sts
            - custom_iam
          discriminator:
            propertyName: generator_type
            mapping:
              advanced: "#/components/schemas/AdvancedChangeGeneratorModel"
              crud_lookup: "#/components/schemas/CrudChangeGeneratorModel"
              ec2: "#/components/schemas/GenericChangeGeneratorModel"
              generic: "#/components/schemas/GenericChangeGeneratorModel"
              rds: "#/components/schemas/GenericChangeGeneratorModel"
              route53: "#/components/schemas/GenericChangeGeneratorModel"
              s3: "#/components/schemas/S3ChangeGeneratorModel"
              ses: "#/components/schemas/SESChangeGeneratorModel"
              sns: "#/components/schemas/SNSChangeGeneratorModel"
              sqs: "#/components/schemas/SQSChangeGeneratorModel"
              custom_iam: "#/components/schemas/CustomIamChangeGeneratorModel"
        resource_arn:
          description: |-
            The ARN(s) of the resource being accessed. This is often SQS/SNS/S3/etc. ARNs. It is possible that the
            resource policies will need to be modified if the change is approved and successful.
          example:
            - arn:aws:sqs:us-east-1:123456789012:sqs_queue,
            - arn:aws:sqs:us-west-2:123456789012:sqs_queue2,
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        version:
          description: Version
          type: string
          default: 2.0
        user:
          description: Email address of user creating the change
          type: string
        action_groups:
          type: array
          description: Action groups
          items:
            type: string
        policy_name:
          type: string
          description: Optional policy name for the change, if applicable.
          pattern: '^[a-zA-Z0-9+=,.@\\-_]+$'
        effect:
          type: string
          description: The effect. By default, this is allow
          default: Allow
          pattern: "^(Allow|Deny)$"
        condition:
          type: object
          description: Optional condition for the change
          example: |-
            {
                "StringEquals": {"iam:PassedToService": "ec2.amazonaws.com"},
                "StringLike": {
                    "iam:AssociatedResourceARN": [
                        "arn:aws:ec2:us-east-1:111122223333:instance/*",
                        "arn:aws:ec2:us-west-1:111122223333:instance/*"
                    ]
                }
            }
        service:
          type: string
        bucket_prefix:
          type: string
        policy:
          type: object
          description: |-
            Optional full policy statement provided by frontend
          example: |-
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "s3:GetObject",
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::abc",
                          "arn:aws:s3:::abc/*"
                      ],
                  }
              ]
            }
        include_accounts:
          type: array
          example: [account_a, account_b, ...]
          description: |-
            An array of accounts to include this policy on. This is only relevant for templated
            IAM roles. By default, the change will apply to all of the accounts the template is deployed to.
          items:
            type: string
        exclude_accounts:
          type: array
          example: [account_a, account_b, ...]
          description: |-
            An array of accounts to explicitly exclude this policy on. This is only relevant for templated
            IAM roles. By default, exclude_accounts is null and the change will apply to all of the accounts
          items:
            type: string
        extra_actions:
          type: array
          example: ["*", "s3:getobject", "s3:list*"]
          description: |-
            An array with a list of extra actions the user wants appended to the policy
          items:
            type: string
    AdvancedChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - action_groups
            - generator_type
            - resource_arn
          properties:
            generator_type:
              type: string
              pattern: "advanced"
            iam_action:
              type: string
              example: kinesis:AddTagsToStream
            resource:
              type: string
              example: "*"

    GenericChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - action_groups
            - resource_arn
          properties:
            action_groups:
              type: array
              items:
                type: string
            resource_arn:
              description: |-
                The ARN(s) of the resource being accessed. This is often SQS/SNS/S3/etc. ARNs. It is possible that the
                resource policies will need to be modified if the change is approved and successful.
              example:
                - arn:aws:sqs:us-east-1:123456789012:sqs_queue
              oneOf:
                - type: string
                - type: array
                  items:
                    type: string
    CrudChangeGeneratorModel:
      description: uses Policy Sentry to generate a policy based on access levels
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - action_groups
            - service_name
            - generator_type
            - resource_arn
          properties:
            generator_type:
              type: string
              pattern: "crud_lookup"
            action_groups:
              type: array
              items:
                type: string
            #                enum:
            #                  - read
            #                  - write
            #                  - list
            #                  - tagging
            #                  - permissions-management
            service_name:
              type: string
    S3ChangeGeneratorModel: # These schemas could be defined in different files.
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - resource_arn
            - action_groups
            - bucket_prefix
            - generator_type
          properties:
            generator_type:
              type: string
              pattern: "s3"
            resource_arn:
              description: |-
                The ARN(s) of the S3 resource(s) being accessed.
              example:
                - arn:aws:s3:::example_bucket
              oneOf:
                - type: string
                - type: array
                  items:
                    type: string
            bucket_prefix:
              type: string
              example: /awesome/prefix/*
            action_groups:
              type: array
              items:
                type: string
    CustomIamChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - policy
            - generator_type
          properties:
            generator_type:
              type: string
              pattern: "custom_iam"
            policy:
              type: object
    SQSChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - action_groups
            - generator_type
            - resource_arn
          properties:
            generator_type:
              type: string
              pattern: "sqs"
            action_groups:
              type: array
              items:
                type: string
    #                enum:
    #                  - get_queue_attributes
    #                  - set_queue_attributes
    #                  - receive_messages
    #                  - send_messages
    #                  - delete_messages
    SNSChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - action_groups
            - generator_type
            - resource_arn
          properties:
            generator_type:
              type: string
              pattern: "sns"
            action_groups:
              type: array
              items:
                type: string
    #                enum:
    #                  - get_topic_attributes
    #                  - set_topic_attributes
    #                  - publish
    #                  - subscribe
    #                  - unsubscribe
    SESChangeGeneratorModel:
      allOf:
        - $ref: "#/components/schemas/ChangeGeneratorModel"
        - type: object
          required:
            - from_address
            - generator_type
            - resource_arn
          properties:
            generator_type:
              type: string
              pattern: "ses"
            from_address:
              type: string
              default: from_address@example.com
            action_groups:
              type: array
              items:
                type: string
    #                enum:
    #                  - send_email
    PrincipalModel:
      type: object
      required:
        - principal_type
      properties:
        principal_type:
          type: string
          enum:
            - AwsResource
            - HoneybeeAwsResourceTemplate
            - TerraformAwsResource
          discriminator:
            propertyName: principal_type
            mapping:
              AwsResource: "#/components/schemas/AwsResourcePrincipalModel"
              HoneybeeAwsResourceTemplate: "#/components/schemas/HoneybeeAwsResourceTemplatePrincipalModel"
              TerraformAwsResource: "#/components/schemas/TerraformAwsResourcePrincipalModel"

    AwsResourcePrincipalModel:
      allOf:
        - $ref: "#/components/schemas/PrincipalModel"
        - type: object
          required:
            - principal_arn
            - principal_type
          properties:
            principal_type:
              type: string
              pattern: "AwsResource"
            principal_arn:
              description: |-
                The principal (Source ARN) associated with the Change. This is most commomly an IAM role ARN.
                The principal ARN is associated with the entity whose policy will be modified if the change is
                approved and successful.
              example: arn:aws:iam::123456789012:role/exampleRole
              type: string
              pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'

    TerraformAwsResourcePrincipalModel:
      allOf:
        - $ref: "#/components/schemas/PrincipalModel"
        - type: object
          required:
            - resource_identifier
            - repository_name
            - principal_type
            - resource_url
          properties:
            principal_type:
              type: string
              pattern: "TerraformAwsResource"
            repository_name:
              description: |-
                The name of the repository for the template. This is specified in the configuration key
                `cache_resource_templates.repositories[n].name`
              type: string
            resource_identifier:
              type: string
              example: path/to/template.tf
            resource_url:
              type: string
              example: https://example.com/resource.tf
            file_path:
              type: string
              example: path/to/template.tf
    HoneybeeAwsResourceTemplatePrincipalModel:
      allOf:
        - $ref: "#/components/schemas/PrincipalModel"
        - type: object
          required:
            - resource_identifier
            - repository_name
            - principal_type
            - resource_url
          properties:
            principal_type:
              type: string
              pattern: "HoneybeeAwsResourceTemplate"
            repository_name:
              description: |-
                The name of the repository for the template. This is specified in the configuration key
                `cache_resource_templates.repositories[n].name`
              type: string
            resource_identifier:
              type: string
              example: path/to/template.yaml
            resource_url:
              type: string
              example: https://example.com/resource
    ChangeModel:
      type: object
      required:
        - principal
        - change_type
      properties:
        principal:
          anyOf:
            - $ref: "#/components/schemas/AwsResourcePrincipalModel"
            - $ref: "#/components/schemas/HoneybeeAwsResourceTemplatePrincipalModel"
            - $ref: "#/components/schemas/TerraformAwsResourcePrincipalModel"
        change_type:
          type: string
        resources:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/ResourceModel"
        version:
          type: string
          default: 3.0
        status:
          type: string
          default: not_applied
          enum:
            - applied
            - not_applied
            - cancelled
            - expired
        id:
          type: string
        autogenerated:
          type: boolean
          readOnly: true
          default: false
        updated_by:
          type: string
    GenericFileChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          properties:
            principal:
              anyOf:
                - $ref: "#/components/schemas/AwsResourcePrincipalModel"
                - $ref: "#/components/schemas/HoneybeeAwsResourceTemplatePrincipalModel"
                - $ref: "#/components/schemas/TerraformAwsResourcePrincipalModel"
            action:
              $ref: "#/components/schemas/Action"
            change_type:
              type: string
              pattern: "generic_file"
            policy:
              type: string
            old_policy:
              type: string
            encoding:
              type: string
              enum:
                - yaml
                - json
                - hcl
                - text
    InlinePolicyChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          properties:
            policy_name:
              type: string
            new:
              default: true
              type: boolean
            action:
              $ref: "#/components/schemas/Action"
            change_type:
              type: string
              pattern: "inline_policy"
            policy:
              $ref: "#/components/schemas/PolicyModel"
            old_policy:
              $ref: "#/components/schemas/PolicyModel"
    ResourceTagChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          required:
            - tag_action
          properties:
            original_key:
              type: string
              example: key_to_be_renamed
              description: original_key is used for renaming a key to something else. This is optional.
            key:
              type: string
              example: desired_key_name
              description: |-
                This is the desired key name for the tag. If a tag key is being renamed, this is what it will be renamed
                to. Otherwise, this key name will be used when creating or updating a tag.
            original_value:
              type: string
            value:
              type: string
            change_type:
              type: string
              pattern: "resource_tag"
            tag_action:
              type: string
              enum:
                - create
                - update
                - delete
    AssumeRolePolicyChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          properties:
            change_type:
              type: string
              pattern: "assume_role_policy"
            policy:
              $ref: "#/components/schemas/PolicyModel"
            old_policy:
              $ref: "#/components/schemas/PolicyModel"
            source_change_id:
              type: string
              readOnly: true
              description: the change model ID of the source change, that this change was generated from
    TearRoleChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          properties:
            change_type:
              type: string
              pattern: "tear_can_assume_role"
    ResourcePolicyChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          required:
            - arn
            - policy
          properties:
            change_type:
              type: string
              pattern: "resource_policy|sts_resource_policy"
            arn:
              type: string
              pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'
            source_change_id:
              type: string
              readOnly: true
              description: the change model ID of the source change, that this change was generated from
            supported:
              type: boolean
              readOnly: true
              description: whether we currently support this type of resource policy change or not
            policy:
              $ref: "#/components/schemas/PolicyModel"
            old_policy:
              $ref: "#/components/schemas/PolicyModel"
    ManagedPolicyChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          required:
            - arn
            - action
          properties:
            arn:
              type: string
              pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'
            change_type:
              type: string
              pattern: "managed_policy"
            action:
              $ref: "#/components/schemas/Action"
    ManagedPolicyResourceChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          properties:
            new:
              default: true
              type: boolean
            change_type:
              type: string
              pattern: "managed_policy_resource"
            policy:
              $ref: "#/components/schemas/PolicyModel"
            old_policy:
              $ref: "#/components/schemas/PolicyModel"
    PermissionsBoundaryChangeModel:
      allOf:
        - $ref: "#/components/schemas/ChangeModel"
        - type: object
          required:
            - arn
            - action
          properties:
            arn:
              type: string
              pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'
            change_type:
              type: string
              pattern: "permissions_boundary"
            action:
              $ref: "#/components/schemas/Action"
    ChangeModelArray:
      type: object
      required:
        - changes
      properties:
        changes:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/InlinePolicyChangeModel"
              - $ref: "#/components/schemas/ManagedPolicyChangeModel"
              - $ref: "#/components/schemas/PermissionsBoundaryChangeModel"
              - $ref: "#/components/schemas/ResourcePolicyChangeModel"
              - $ref: "#/components/schemas/AssumeRolePolicyChangeModel"
              - $ref: "#/components/schemas/TearRoleChangeModel"
              - $ref: "#/components/schemas/ResourceTagChangeModel"
              - $ref: "#/components/schemas/GenericFileChangeModel"
              - $ref: "#/components/schemas/ManagedPolicyResourceChangeModel"
    ArnArray:
      type: array
      items:
        type: string
        pattern: '^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$'
    CloudAccountModelArray:
      type: object
      properties:
        accounts:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/CloudAccountModel"
    CloudAccountModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - active # AKA: ready
            - in-progress
            - in-active
            - deleted
            - created
            - suspended
            - deprecated
        type:
          type: string
          enum:
            - aws
            - gcp
        sync_enabled:
          type: boolean
        sensitive:
          type: boolean
          default: false
        environment:
          type: string
          enum:
            - prod
            - test
        aliases:
          type: array
          items:
            type: string
        email:
          type: string
    PolicyModel:
      type: object
      properties:
        version:
          type: string
          description: AWS Policy Version
        policy_document:
          type: object
          description: JSON policy document
        policy_sha256:
          type: string
          description: hash of the policy_document json
    PolicyStatement:
      type: object
      required:
        - action
        - effect
        - resource
      properties:
        action:
          type: array
          description: AWS Policy Actions
          items:
            type: string
        effect:
          type: string
          description: Allow | Deny
        resource:
          type: array
          description: AWS Resource ARNs
          items:
            type: string
        sid:
          type: string
          description: Statement identifier
          pattern: "^([a-zA-Z0-9]+)*"
    CommentModel:
      type: object
      required:
        - id
        - timestamp
        - user_email
        - text
      properties:
        id:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        edited:
          type: boolean
        last_modified:
          type: string
          format: date-time
        user_email:
          type: string
        user:
          $ref: "#/components/schemas/UserModel"
        text:
          type: string
    AwsPrincipalModel:
      type: object
      required:
        - name
        - account_id
      properties:
        name:
          type: string
          example: super_awesome_admin
        account_id:
          type: string
          minLength: 12
          maxLength: 12
          example: "123456789012"
          readOnly: true
        account_name:
          type: string
          example: super_awesome
          readOnly: true
        arn:
          type: string
          example: arn:aws:iam::123456789012:role/super_awesome_admin
          readOnly: true
          pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'
    CloudTrailError:
      type: object
      properties:
        event_call:
          type: string
          example: sqs:CreateQueue
        resource:
          type: string
          example: arn:aws:iam::123456789012:role/roleName
        generated_policy:
          type: object
          example:
            {
              "Version": "2012-10-17",
              "Statement":
                [
                  {
                    "Resource": ["arn:aws:iam::123456789012:role/roleName"],
                    "Action": ["sts:AssumeRole"],
                    "Effect": "Allow",
                  },
                ],
            }
        count:
          type: integer
          example: 5
    CloudTrailErrorArray:
      type: object
      properties:
        cloudtrail_errors:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/CloudTrailError"
    CloudTrailDetailsModel:
      type: object
      properties:
        error_url:
          type: string
          example: https://cloudtrail_logs/for/role_arn
        errors:
          $ref: "#/components/schemas/CloudTrailErrorArray"
    S3Error:
      type: object
      properties:
        error_call:
          type: string
          example: s3:PutObject
        count:
          type: integer
          example: 5
        bucket_name:
          type: string
          example: bucket_name
        request_prefix:
          type: string
          example: folder/file.txt
        status_code:
          type: integer
          example: 403
        status_text:
          type: string
          example: AccessDenied
        role_arn:
          type: string
          example: arn:aws:iam::123456789012:role/roleName
          pattern: '(^arn:([^:]*):([^:]*):([^:]*):(|\*|[\d]{12}|cloudfront|aws):(.+)$)|^\*$'
    S3ErrorArray:
      type: object
      properties:
        s3_errors:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/S3Error"
    S3DetailsModel:
      type: object
      properties:
        query_url:
          type: string
          example: https://s3_log_query/for/role_or_bucket_arn
        error_url:
          type: string
          example: https://s3_error_query/for/role_or_bucket_arn
        errors:
          $ref: "#/components/schemas/S3ErrorArray"
    AppDetailsModel:
      type: object
      properties:
        name:
          type: string
          example: app_name
        owner:
          type: string
          example: owner@example.com
        owner_url:
          type: string
          example: https://link_to_owner_group
        app_url:
          type: string
          example: https://link_to_app_ci_pipeline_for_app
    AppDetailsArray:
      type: object
      properties:
        app_details:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/AppDetailsModel"
    PrincipalModelTearConfig:
      type: object
      properties:
        active_users:
          type: array
          items:
            type: string
        supported_groups:
          type: array
          items:
            type: string
    PrincipalModelRoleAccessConfig:
      type: object
      properties:
        noq_authorized_cli_tag:
          type: string
          readOnly: true
        noq_authorized_tag:
          type: string
          readOnly: true
        is_valid_config:
          type: boolean
          readOnly: true
          default: False
        noq_authorized_groups:
          type: array
          items:
            type: object
        noq_authorized_cli_groups:
          type: array
          items:
            type: object
    ExtendedAwsPrincipalModel:
      allOf:
        - $ref: "#/components/schemas/AwsPrincipalModel"
        - type: object
          required:
            - inline_policies
            - assume_role_policies
            - managed_policies
            - tags
          properties:
            inline_policies:
              type: array
              items:
                type: object # TODO: make inline_policies schema
            assume_role_policy_document:
              type: object # TODO: make assume_role_policy_document schema
            cloudtrail_details:
              $ref: "#/components/schemas/CloudTrailDetailsModel"
            s3_details:
              $ref: "#/components/schemas/S3DetailsModel"
            apps:
              $ref: "#/components/schemas/AppDetailsArray"
            managed_policies:
              type: array
              items:
                type: object # TODO: make managed_policies schema
            permissions_boundary:
              type: object
            tags:
              type: array
              items:
                type: object # TODO: make tags schema
            elevated_access_config:
              $ref: "#/components/schemas/PrincipalModelTearConfig"
            role_access_config:
              $ref: "#/components/schemas/PrincipalModelRoleAccessConfig"
            effective_policy:
              type: object
              description: |-
                "The minified effective policy for the principal. This is effectively a combination "
                "of the inline policies and managed policies of the principal. "
            effective_policy_repoed:
              type: object
              description: |-
                "The minified effective policy for the principal, with unused permissions removed."
            config_timeline_url:
              type: string
              description: A link to the role's AWS Config Timeline
            templated:
              type: boolean
              readOnly: true
            template_link:
              type: string
              readOnly: true
            created_time:
              type: string
              readOnly: true
            updated_time:
              type: string
              readOnly: true
            last_used_time:
              type: string
              readOnly: true
            description:
              type: string
              readOnly: true
            owner:
              type: string
              readOnly: true
              description: |-
                A string depicting the owning user or group for a given AWS principal. Typically determined by one or
                more tags on the principal.
    UserModel:
      type: object
      readOnly: true
      properties:
        email:
          type: string
        extended_info:
          type: object
        details_url:
          type: string
          example: https://details_about/user
        photo_url:
          type: string
          example: https://user_photos/user_thumbnail.jpg
    ApiErrorModel:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        message:
          type: string
    CloneRoleRequestModel:
      type: object
      required:
        - account_id
        - role_name
        - dest_account_id
        - dest_role_name
        - options
      properties:
        account_id:
          type: string
          minLength: 12
          maxLength: 12
        role_name:
          type: string
        dest_account_id:
          type: string
          minLength: 12
          maxLength: 12
        dest_role_name:
          type: string
        options:
          type: object
          properties:
            assume_role_policy:
              type: boolean
              default: False
            tags:
              type: boolean
              default: False
            copy_description:
              type: boolean
              default: False
            description:
              type: string
            inline_policies:
              type: boolean
              default: False
            managed_policies:
              type: boolean
              default: False
            max_session_duration:
              type: boolean
              default: False
    CreateCloneRequestResponse:
      type: object
      properties:
        errors:
          type: integer
        role_created:
          type: boolean
        action_results:
          type: array
          items:
            $ref: "#/components/schemas/ActionResult"
    RoleCreationRequestModel:
      type: object
      required:
        - role_name
        - account_id
      properties:
        account_id:
          type: string
          minLength: 12
          maxLength: 12
        role_name:
          type: string
        description:
          type: string
        instance_profile:
          type: boolean
          default: True
    RequestCreationModel:
      type: object
      required:
        - changes
      properties:
        changes:
          $ref: "#/components/schemas/ChangeModelArray"
        justification:
          type: string
        dry_run:
          type: boolean
          default: False
        admin_auto_approve:
          type: boolean
          default: False
        expiration_date:
          type: integer
          example: 20210905
          description: Date to expire requested policy, in the format of YYYYmmdd
    RequestCreationResponse:
      type: object
      properties:
        errors:
          type: integer
        request_created:
          type: boolean
        request_id:
          type: string
        request_url:
          type: string
        action_results:
          type: array
          items:
            $ref: "#/components/schemas/ActionResult"
        extended_request:
          $ref: "#/components/schemas/ExtendedRequestModel"
    RequestModificationBaseModel:
      type: object
      required:
        - command
      properties:
        command:
          type: string
          enum:
            - add_comment
            - approve_request
            - reject_request
            - cancel_request
            - apply_change
            - update_change
            - cancel_change
            - move_back_to_pending
            - update_expiration_date
    ExpirationDateRequestModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          required:
            - expiration_date
          properties:
            expiration_date:
              type: ["integer", "null"]
              default: null
              example: 20210905
              description: Date to expire requested policy, in the format of YYYYmmdd
    CommentRequestModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          required:
            - comment_text
          properties:
            comment_text:
              type: string
    UpdateChangeModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          required:
            - policy_document
            - change_id
          properties:
            policy_document:
              type: object
            change_id:
              type: string
    ApplyChangeModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          required:
            - change_id
          properties:
            policy_document:
              type: object
            change_id:
              type: string
    CancelChangeModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          required:
            - change_id
          properties:
            policy_document:
              type: object
            change_id:
              type: string
    ChangeRequestStatusModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
    MoveToPendingRequestModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
    ApproveRequestModificationModel:
      allOf:
        - $ref: "#/components/schemas/RequestModificationBaseModel"
        - type: object
          properties:
            policy_request_changes:
              type: array
              items:
                type: object
                required:
                  - policy_document
                  - change_id
                properties:
                  policy_document:
                    type: object
                  change_id:
                    type: string
    PolicyRequestModificationRequestModel:
      type: object
      required:
        - modification_model
      properties:
        modification_model:
          type: object
          oneOf:
            - $ref: "#/components/schemas/CommentRequestModificationModel"
            - $ref: "#/components/schemas/UpdateChangeModificationModel"
            - $ref: "#/components/schemas/ExpirationDateRequestModificationModel"
            - $ref: "#/components/schemas/ApplyChangeModificationModel"
            - $ref: "#/components/schemas/ApproveRequestModificationModel"
            - $ref: "#/components/schemas/MoveToPendingRequestModificationModel"
            - $ref: "#/components/schemas/ChangeRequestStatusModificationModel"
          discriminator:
            propertyName: command
            mapping:
              add_comment: "#/components/schemas/CommentRequestModificationModel"
              update_change: "#/components/schemas/UpdateChangeModificationModel"
              update_expiration_date: "#/components/schemas/ExpirationDateRequestModificationModel"
    PolicyRequestModificationResponseModel:
      type: object
      properties:
        errors:
          type: integer
        action_results:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
              visible:
                type: boolean
                default: true
    AuthenticationResponse:
      type: object
      properties:
        authenticated:
          type: boolean
        errors:
          type: array
          items:
            type: string
        username:
          type: string
        groups:
          type: array
          items:
            type: string
    UserManagementModel:
      type: object
      properties:
        user_management_action:
          type: string
          enum:
            - create
            - update
            - delete
        username:
          type: string
        password:
          type: string
        groups:
          type: array
          items:
            type: string
    LoginAttemptModel:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        after_redirect_uri:
          type: string
    RegistrationAttemptModel:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    WebResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - error
            - redirect
        reason:
          type: string
          example:
            - authenticated_redirect
            - authentication_failure
            - not_configured
        redirect_url:
          type: string
        status_code:
          type: integer
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        count:
          type: integer
        total:
          type: integer
        page:
          type: integer
        last_page:
          type: integer
        data:
          oneOf:
            - type: object
            - type: array
    DataTableResponse:
      type: object
      required:
        - totalCount
        - filteredCount
        - data
      properties:
        totalCount:
          type: integer
        filteredCount:
          type: integer
        data:
          type: array
          items:
            type: object
    PolicyCheckModel:
      type: array
      items:
        type: object
        properties:
          issue:
            type: string
          detail:
            type: string
          location:
            type: string
          severity:
            type: string
          title:
            type: string
          description:
            type: string
    ServiceControlPolicyDetailsModel:
      type: object
      required:
        - id
        - arn
        - name
        - description
        - aws_managed
        - content
      properties:
        id:
          type: string
        arn:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        aws_managed:
          type: boolean
        content:
          type: string
    ServiceControlPolicyTargetModel:
      type: object
      required:
        - target_id
        - arn
        - name
        - type
      properties:
        target_id:
          type: string
        arn:
          type: string
        name:
          type: string
        type:
          type: string
    ServiceControlPolicyModel:
      type: object
      required:
        - targets
        - policy
      properties:
        targets:
          type: array
          items:
            $ref: "#/components/schemas/ServiceControlPolicyTargetModel"
        policy:
          $ref: "#/components/schemas/ServiceControlPolicyDetailsModel"
    ServiceControlPolicyArrayModel:
      type: array
      items:
        $ref: "#/components/schemas/ServiceControlPolicyModel"
    EligibleRolesModel:
      type: object
      description: Model element for details about an eligible role
      required:
        - arn
        - account_id
        - role_name
      properties:
        arn:
          type: string
          description: ARN of the role
        account_id:
          type: string
          description: Account ID of the role
        account_friendly_name:
          type: string
          description: Account's friendly name (if known), otherwise "Unknown"
        role_name:
          type: string
          description: Name of the role
        apps:
          $ref: "#/components/schemas/AppDetailsArray"
    EligibleRolesModelArray:
      type: object
      properties:
        roles:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/EligibleRolesModel"
    HubAccount:
      type: object
      required:
        - name
        - account_id
      properties:
        name:
          type: string
          description: Customer-specified or default hub role name (NoqCentralRole)
        account_name:
          type: string
          description: Account name
        account_id:
          type: string
          pattern: '^\d{12}$'
          description: AWS account id
        role_arn:
          type: string
          description: ARN of the role
        external_id:
          type: string
          description: Designated external identifier to provide a safeguard against brute force attempts
    SpokeAccount:
      type: object
      required:
        - name
        - account_id
      properties:
        name:
          type: string
          description: Customer-specified or default spoke role name (NoqSpokeRole)
        account_name:
          type: string
          description: Account name
        account_id:
          type: string
          pattern: '^\d{12}$'
          description: AWS account id
        role_arn:
          type: string
          description: ARN of the spoke role
        external_id:
          type: string
          description: Designated external identifier to provide a safeguard against brute force attempts
        hub_account_arn:
          type: string
          description: Links to the designated hub role ARN
        master_for_account:
          type: boolean
          description: Optional value (defaults to false) to indicate whether this spoke role has master access rights on the account
          default: false
        owners:
          type: array
          description: Optional user or group that owns the account
          items:
            type: string
          default: []
        viewers:
          type: array
          description: Optional list of users or groups that can view resources for the account
          items:
            type: string
          default: []
        delegate_admin_to_owner:
          type: boolean
          description: |-
            Optional value (defaults to false) to indicate whether the owner should be delegated admin rights for policy requests
            on this account. If this is set, the delegated admin will be able to approve policy requests pertaining to this account.
          default: false
        restrict_viewers_of_account_resources:
          type: boolean
          description: |-
            Optional value (defaults to false) to indicate whether to restrict who can view resources from this account in Noq.
            If this is set, viewers will be restricted to the list of users or groups provided in the `viewers` field.
          default: false
    OrgAccount:
      type: object
      required:
        - org_id
      properties:
        org_id:
          type: string
          description: A unique identifier designating the identity of the organization
        account_id:
          type: string
          pattern: '^\d{12}$'
          description: AWS account id
        account_name:
          type: string
          description: AWS account name
        owner:
          type: string
          description: AWS account owner
    GoogleOIDCSSOIDPProvider:
      type: object
      required:
        - client_id
        - client_secret
        - authorize_scopes
        - provider_name
        - provider_type
      properties:
        client_id:
          type: string
          description: A unique client_id to be used for identification
        client_secret:
          type: string
          description: The client secret used to authenticate to SSO IDP
        authorize_scopes:
          type: string
          description: OpenID Connect Clients use scope values as defined in 3.3 of OAuth 2.0 [RFC6749] to specify what access privileges are being requested for Access Tokens. The scopes associated with Access Tokens determine what resources will be available when they are used to access OAuth 2.0 protected endpoints. For OpenID Connect, scopes can be used to request that specific sets of information be made available as Claim Values. This document describes only the scope values used by OpenID Connect.
        provider_name:
          type: string
          description: The identity provider name.
          pattern: "^Google$"
        provider_type:
          type: string
          description: The identity provider type.
          pattern: "^Google$"
    SamlOIDCSSOIDPProvider:
      type: object
      required:
        - MetadataURL
        - provider_name
        - provider_type
      properties:
        MetadataURL:
          type: string
          description: The metadata defining the SAML authentication
        provider_name:
          type: string
          description: The identity provider name.
          pattern: "^SAML$"
        provider_type:
          type: string
          description: The identity provider type.
          pattern: "^SAML$"
    OIDCSSOIDPProvider:
      type: object
      required:
        - client_id
        - client_secret
        - attributes_request_method
        - oidc_issuer
        - authorize_scopes
        - provider_name
        - provider_type
      properties:
        client_id:
          type: string
          description: A unique client id used for authentication with OIDC providers
        client_secret:
          type: string
          description: A unique client id used for authentication with OIDC providers
        attributes_request_method:
          type: string
          description: A unique client id used for authentication with OIDC providers
        oidc_issuer:
          type: string
          description: A unique client id used for authentication with OIDC providers
        authorize_scopes:
          type: string
          description: A unique client id used for authentication with OIDC providers
        authorize_url:
          type: string
          description: if not available from discovery URL specified by oidc_issuer key
        token_url:
          type: string
          description: if not available from discovery URL specified by oidc_issuer key
        attributes_url:
          type: string
          description: if not available from discovery URL specified by oidc_issuer key
        jwks_uri:
          type: string
          description: if not available from discovery URL specified by oidc_issuer key
        attributes_url_add_attributes:
          type: string
          description: a read-only property that is set automatically
        provider_name:
          type: string
          description: The identity provider name.
          pattern: "^OIDC$"
        provider_type:
          type: string
          description: The identity provider type.
          pattern: "^OIDC$"
    SSOIDPProviders:
      type: object
      properties:
        google:
          $ref: "#/components/schemas/GoogleOIDCSSOIDPProvider"
        saml:
          $ref: "#/components/schemas/SamlOIDCSSOIDPProvider"
        oidc:
          $ref: "#/components/schemas/OIDCSSOIDPProvider"
    CognitoUser:
      type: object
      required:
        - Username
      properties:
        Username:
          type: string
          description: required - The username for the user. Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username can't be changed.
        Attributes:
          type: array
          default: []
          items:
            type: object
            properties:
              Name:
                type: string
                description: attribute name - reference https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html#CognitoIdentityProvider.Client.admin_create_user
              Value:
                type: string
                description: attribute value - reference https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cognito-idp.html#CognitoIdentityProvider.Client.admin_create_user
        Enabled:
          type: boolean
        MFAOptions:
          type: array
          default: []
          description: Align with what we get back from cognito list users
          items:
            type: object
            properties:
              DeliveryMedium:
                type: string
                description: can be either SMS or EMAIL
                enum:
                  - SMS
                  - EMAIL
              AttributeName:
                type: string
        Groups:
          type: array
          default: []
          description: assigns Cognito group memberships to user account; these groups *must* exist before they can be assigned
          items:
            type: string
            description: CognitoGroup by GroupName - must match with an existing group in the host / tenant
        UserStatus:
          type: string
          description: Can be UNCONFIRMED, CONFIRMED, ARCHIVED, COMPROMISED, UNKNOWN, RESET_REQUIRED, FORCE_CHANGE_PASSWORD, EXTERNAL_PROVIDER
          enum:
            - UNCONFIRMED
            - CONFIRMED
            - ARCHIVED
            - COMPROMISED
            - UNKNOWN
            - RESET_REQUIRED
            - FORCE_CHANGE_PASSWORD
            - EXTERNAL_PROVIDER
    CognitoGroup:
      type: object
      required:
        - Groupname
      properties:
        GroupName:
          type: string
          description: required - The name of the group. Must be unique.
        Description:
          type: string
          description: uhm... description is the description, and that is this description of the description
          default: ""
        RoleArn:
          type: string
          description: The role Amazon Resource Name (ARN) for the group.
    CognitoAccounts:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/CognitoUser"
        groups:
          type: array
          items:
            $ref: "#/components/schemas/CognitoGroup"
    ChallengeUrl:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether CLI authentication via Challenge URL is enabled
    SlackIntegration:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether the slack webhook is enabled
        webhook_url:
          type: string
          description: The slack webhook URL to configure for the callback
    CloudtrailDetection:
      type: object
      properties:
        host:
          type: string
          description: TODO
        error_code:
          type: string
          description: Decoded error code
        error_message:
          type: string
          description: Decoded error message
        arn:
          type: string
          description: principal arn
        session_name:
          type: string
          description: TODO
        source_ip:
          type: string
          description: TODO
        event_call:
          type: string
          description: TODO
        epoch_event_time:
          type: integer
          description: TODO
        ttl:
          type: integer
          description: TODO
        count:
          type: integer
          description: TODO
        resource:
          type: string
          description: TODO
        request_id:
          type: string
          description: TODO
        generated_policies:
          type: object
          description: TODO

    CloudtrailDetectionConfiguration:
      type: object
      required:
        - account_id
        - queue_arn
      properties:
        enabled:
          type: boolean
          description: Whether cloudtrail is enabled for a specified account id, defaults to false
          default: false
        event_ttl:
          type: integer
          description: Time to live of the event, defaults to 86400
          default: 86400
        max_messages_to_process:
          type: integer
          description: Maximum number of messages that are processes
          default: 100
        queue_arn:
          type: string
          description: The queue ARN to which the cloud trail detection celery task should subscribe to
        event_bridge_substitutions:
          type: array
          items:
            type: string
            description: TODO
    AutomaticPolicyRequest:
      type: object
      required:
        - policy
        - role
      properties:
        policy:
          type: string
          description: The json dumped policy requested for approval
        role:
          type: string
          description: The AWS Role arn
          example: arn:aws:iam::111118675309:role/AutomaticPermissionsRole
    ExtendedAutomaticPolicyRequest:
      type: object
      required:
        - policy
        - role
        - id
        - account
        - user
        - event_time
      properties:
        id:
          type: string
          description: A sha256 hash that represents the policy request
        role:
          type: string
          description: The AWS Role arn
          example: arn:aws:iam::111118675309:role/AutomaticPermissionsRole
        account:
          $ref: "#/components/schemas/SpokeAccount"
        role_owner:
          type: string
          description: The owner of the AWS role
        user:
          type: string
          description: The AWS user requesting the generated policy
        event_time:
          type: string
          format: date-time
          description: The time the request was made
        error:
          type: string
          description: The AWS response that caused the automatic policy request
        system:
          type: string
          description: The information of the device the request was generated on
        process:
          type: string
          description: Information about the running process that caused the automatic policy request to be generated
        policy:
          type: object
          description: The json representation of the policy requested for approval
        last_updated:
          type: string
          format: date-time
          description: The last time the policy request was updated.
        status:
          type: string
          default: pending
          description: The policy request's status
          enum:
            - approved
            - pending
            - denied
            - applied_awaiting_execution
            - applied_and_success
            - applied_and_failure
