Resources:
  CentralRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref ClusterRoleParameter
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalIDParameter
      RoleName: !Ref CentralRoleNameParameter
      Policies:
        - PolicyName: !Join
            - "-"
            - - "central-account-policy"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  # The Central Account Role should be able to assume all spoke roles. If credential brokering is
                  # enabled, the central account role will be used to assume into the target role to broker credentials.
                  - "sts:AssumeRole"
                  - "sts:TagSession"
                Resource:
                  - "*"
                  # Fn::If:
                  #   - ReadOnlyModeEnabled
                  #   - !Sub "arn:aws:iam::*:role/${SpokeRoleNameParameter}"
                  #   - "*"
  SpokeRole:
    Type: "AWS::IAM::Role"
    DependsOn:
      - "CentralRole"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt CentralRole.Arn
            Action:
              - "sts:AssumeRole" # The Central Account Role allows Noq to assume into it.
              - "sts:TagSession"
      RoleName: !Ref SpokeRoleNameParameter
      Policies:
        - PolicyName: "spoke-acct-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  Fn::If:
                    - ReadOnlyModeEnabled
                    - - "{{ initial_action }}"{% for action in read_only_actions %}
                      - "{{ action }}"{% endfor %}
                    - - "{{ initial_action }}"{% for action in read_write_actions %}
                      - "{{ action }}"{% endfor %}
                Resource: "*"
  SnsCustomResource:
    Type: "Custom::SnsCustomResource"
    DependsOn:
      - "SpokeRole"
      - "CentralRole"
    Properties:
      ServiceToken: !Ref RegistrationTopicArnParameter
      IntegrationName: !Ref "AWS::StackName"
      ExternalId: !Ref ExternalIDParameter
      AccountName: !Ref AccountNameParameter
      ClusterRole: !Ref ClusterRoleParameter
      CentralRoleArn: !GetAtt CentralRole.Arn
      SpokeRole: !Ref SpokeRoleNameParameter
      SpokeRoleArn: !GetAtt SpokeRole.Arn
      Host: !Ref HostParameter
      ActionType: "AWSCentralAcctRegistration"
      TemplateVersion: 1.5
      AWSAccountId: !Ref "AWS::AccountId"
      ReadOnlyMode: !Ref ReadOnlyModeParameter

Conditions:
  ReadOnlyModeEnabled: !Equals [true, !Ref ReadOnlyModeParameter]

Parameters:
  {{ parameters }}

Outputs:
  ExternalID:
    Description: ExternalID to share with the SaaS for assume-role deployments
    Value: !Ref ExternalIDParameter
  AccountName:
    Description: Name to identify the account by. Defaults to the account id.
    Value: !Ref AccountNameParameter
  Host:
    Description: Host to share with the SaaS for deployment
    Value: !Ref HostParameter
  ClusterRole:
    Description: ClusterRole to share with the SaaS for deployment
    Value: !Ref ClusterRoleParameter
  CentralRoleArn:
    Description: CentralRoleArn to share with the SaaS for deployment
    Value: !GetAtt CentralRole.Arn
  SpokeRole:
    Description: SpokeRole to share with the SaaS for deployment
    Value: !Ref SpokeRoleNameParameter
  SpokeRoleArn:
    Description: SpokeRoleArn to share with the SaaS for deployment
    Value: !GetAtt SpokeRole.Arn
  CentralRoleName:
    Description: The name of the Central (hub) role in customer's environment
    Value: !Ref CentralRoleNameParameter
  SpokeRoleName:
    Description: The name of the spoke role in each customer account.
    Value: !Ref SpokeRoleNameParameter
  RegistrationTopicArn:
    Description: SNS Registration topic ARN
    Value: !Ref RegistrationTopicArnParameter
  ReadOnly:
    Description: Does NOQ only have read access to the account
    Value: !Ref ReadOnlyModeParameter
