"""migration

Revision ID: 190ae33e58e9
Revises: 0ccfc94422f7
Create Date: 2023-02-02 13:43:34.383347

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "190ae33e58e9"
down_revision = "0ccfc94422f7"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("aws_account", sa.Column("account_id", sa.String(), nullable=True))
    op.drop_index("ix_aws_account_number", table_name="aws_account")
    op.drop_constraint("uq_tenant_number", "aws_account", type_="unique")
    op.create_index(
        op.f("ix_aws_account_account_id"), "aws_account", ["account_id"], unique=False
    )
    op.create_unique_constraint(
        "uq_tenant_account_id", "aws_account", ["tenant_id", "account_id"]
    )
    op.create_foreign_key(None, "aws_account", "tenant", ["tenant_id"], ["id"])
    op.drop_column("aws_account", "number")
    op.create_foreign_key(None, "identity_role", "tenant", ["tenant_id"], ["id"])
    op.create_foreign_key(None, "role_access", "tenant", ["tenant_id"], ["id"])
    op.create_foreign_key(
        None, "role_access", "groups", ["group_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "role_access", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "role_access", type_="foreignkey")
    op.drop_constraint(None, "role_access", type_="foreignkey")
    op.drop_constraint(None, "role_access", type_="foreignkey")
    op.drop_constraint(None, "identity_role", type_="foreignkey")
    op.add_column(
        "aws_account",
        sa.Column("number", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "aws_account", type_="foreignkey")
    op.drop_constraint("uq_tenant_account_id", "aws_account", type_="unique")
    op.drop_index(op.f("ix_aws_account_account_id"), table_name="aws_account")
    op.create_unique_constraint(
        "uq_tenant_number", "aws_account", ["tenant_id", "number"]
    )
    op.create_index("ix_aws_account_number", "aws_account", ["number"], unique=False)
    op.drop_column("aws_account", "account_id")
    # ### end Alembic commands ###
