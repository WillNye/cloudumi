"""migration

Revision ID: 93e416ce2a51
Revises: 66bfd6f60a98
Create Date: 2023-05-29 13:26:29.418448

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "93e416ce2a51"
down_revision = "66bfd6f60a98"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "typeahead_field_helper",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("endpoint", sa.String(), nullable=False),
        sa.Column("query_param_key", sa.String(), nullable=True),
        sa.Column(
            "provider",
            postgresql.ENUM(
                "aws",
                "azure_ad",
                "google_workspace",
                "okta",
                name="ProviderEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "typeahead_provider_idx", "typeahead_field_helper", ["provider"], unique=False
    )
    op.create_index(
        "uix_typeahead_provider_endpoint",
        "typeahead_field_helper",
        ["provider", "endpoint"],
        unique=True,
    )
    op.create_index(
        "uix_typeahead_provider_name",
        "typeahead_field_helper",
        ["provider", "name"],
        unique=True,
    )
    op.create_table(
        "request_type",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column(
            "provider",
            postgresql.ENUM(
                "aws",
                "azure_ad",
                "google_workspace",
                "okta",
                name="ProviderEnum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "supported_template_types", postgresql.ARRAY(sa.String()), nullable=False
        ),
        sa.Column("template_types", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("template_attribute", sa.String(), nullable=False),
        sa.Column(
            "apply_attr_behavior",
            postgresql.ENUM("Append", "Merge", "Replace", name="ApplyAttrBehaviorEnum"),
            nullable=False,
        ),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "request_type_tenant_provider_idx",
        "request_type",
        ["tenant_id", "provider"],
        unique=False,
    )
    op.create_index(
        "uix_request_type_tp_name",
        "request_type",
        ["tenant_id", "provider", "name"],
        unique=True,
    )
    op.create_table(
        "change_type",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("request_type_id", sa.UUID(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["request_type_id"],
            ["request_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ct_request_type_idx",
        "change_type",
        ["tenant_id", "request_type_id"],
        unique=False,
    )
    op.create_index("ct_tenant_idx", "change_type", ["id", "tenant_id"], unique=False)
    op.create_index(
        "uix_change_type_request_name",
        "change_type",
        ["request_type_id", "name"],
        unique=True,
    )
    op.create_table(
        "change_field",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("change_type_id", sa.UUID(), nullable=False),
        sa.Column("change_element", sa.Integer(), nullable=False),
        sa.Column("field_key", sa.String(), nullable=False),
        sa.Column(
            "field_type",
            postgresql.ENUM(
                "TextBox",
                "TypeAhead",
                "EnforcedTypeAhead",
                "CheckBox",
                "Choice",
                name="FieldTypeEnum",
            ),
            nullable=False,
        ),
        sa.Column("field_text", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("allow_none", sa.Boolean(), nullable=False),
        sa.Column("allow_multiple", sa.Boolean(), nullable=False),
        sa.Column("max_char", sa.Integer(), nullable=True),
        sa.Column("validation_regex", sa.String(), nullable=True),
        sa.Column("typeahead_field_helper_id", sa.UUID(), nullable=True),
        sa.Column("options", postgresql.ARRAY(sa.JSON()), nullable=True),
        sa.Column("default_value", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_type_id"],
            ["change_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["typeahead_field_helper_id"],
            ["typeahead_field_helper.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "change_field_change_type_idx", "change_field", ["change_type_id"], unique=False
    )
    op.create_index(
        "uix_change_type_element",
        "change_field",
        ["change_type_id", "change_element"],
        unique=True,
    )
    op.create_table(
        "change_type_template",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("change_type_id", sa.UUID(), nullable=False),
        sa.Column("template", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_type_id"],
            ["change_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "uix_change_type_id_idx",
        "change_type_template",
        ["change_type_id"],
        unique=True,
    )
    op.alter_column(
        "iambic_template", "tenant_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.add_column(
        "iambic_template_provider_definition",
        sa.Column("resource_id", sa.String(), nullable=False),
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "tenant_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "iambic_template_id",
        existing_type=sa.UUID(),
        nullable=False,
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "tenant_provider_definition_id",
        existing_type=sa.UUID(),
        nullable=False,
    )
    op.drop_index(
        "itpd_template_and_provider_def_idx",
        table_name="iambic_template_provider_definition",
    )
    op.create_index(
        "itpd_template_and_provider_def_uix",
        "iambic_template_provider_definition",
        ["iambic_template_id", "tenant_provider_definition_id"],
        unique=True,
    )
    op.create_index(
        "itpd_template_resource_id_idx",
        "iambic_template_provider_definition",
        ["iambic_template_id", "resource_id"],
        unique=False,
    )
    op.add_column(
        "tenant",
        sa.Column("supported_template_types", sa.ARRAY(sa.String()), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tenant", "supported_template_types")
    op.drop_index(
        "itpd_template_resource_id_idx",
        table_name="iambic_template_provider_definition",
    )
    op.drop_index(
        "itpd_template_and_provider_def_uix",
        table_name="iambic_template_provider_definition",
    )
    op.create_index(
        "itpd_template_and_provider_def_idx",
        "iambic_template_provider_definition",
        ["iambic_template_id", "tenant_provider_definition_id"],
        unique=False,
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "tenant_provider_definition_id",
        existing_type=sa.UUID(),
        nullable=True,
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "iambic_template_id",
        existing_type=sa.UUID(),
        nullable=True,
    )
    op.alter_column(
        "iambic_template_provider_definition",
        "tenant_id",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.drop_column("iambic_template_provider_definition", "resource_id")
    op.alter_column(
        "iambic_template", "tenant_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.drop_index("uix_change_type_id_idx", table_name="change_type_template")
    op.drop_table("change_type_template")
    op.drop_index("uix_change_type_element", table_name="change_field")
    op.drop_index("change_field_change_type_idx", table_name="change_field")
    op.drop_table("change_field")
    op.drop_index("uix_change_type_request_name", table_name="change_type")
    op.drop_index("ct_tenant_idx", table_name="change_type")
    op.drop_index("ct_request_type_idx", table_name="change_type")
    op.drop_table("change_type")
    op.drop_index("uix_request_type_tp_name", table_name="request_type")
    op.drop_index("request_type_tenant_provider_idx", table_name="request_type")
    op.drop_table("request_type")
    op.drop_index("uix_typeahead_provider_name", table_name="typeahead_field_helper")
    op.drop_index(
        "uix_typeahead_provider_endpoint", table_name="typeahead_field_helper"
    )
    op.drop_index("typeahead_provider_idx", table_name="typeahead_field_helper")
    op.drop_table("typeahead_field_helper")
    # ### end Alembic commands ###
