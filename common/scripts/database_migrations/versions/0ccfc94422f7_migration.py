"""migration

Revision ID: 0ccfc94422f7
Revises: b2877e6bce73
Create Date: 2023-02-01 15:42:02.934329

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0ccfc94422f7"
down_revision = "b2877e6bce73"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("aws_account", sa.Column("tenant_id", sa.Integer(), nullable=True))
    op.create_unique_constraint(
        "uq_tenant_number", "aws_account", ["tenant_id", "number"]
    )
    op.create_foreign_key(None, "aws_account", "tenant", ["tenant_id"], ["id"])
    op.drop_column("aws_account", "deleted")
    op.drop_column("aws_account", "created_at")
    op.drop_column("aws_account", "created_by")
    op.add_column(
        "group_memberships", sa.Column("deleted_at", sa.DateTime(), nullable=True)
    )
    op.add_column("groups", sa.Column("deleted_at", sa.DateTime(), nullable=True))
    op.create_unique_constraint(
        "uq_tenant_role_arn", "identity_role", ["tenant_id", "role_arn"]
    )
    op.drop_column("identity_role", "deleted")
    op.drop_column("identity_role", "created_at")
    op.drop_column("identity_role", "created_by")
    op.add_column("request", sa.Column("deleted_at", sa.DateTime(), nullable=True))
    op.add_column(
        "request_comment", sa.Column("deleted_at", sa.DateTime(), nullable=True)
    )
    op.create_unique_constraint(
        "uq_tenant_group_role",
        "role_access",
        ["tenant_id", "group_id", "identity_role_id"],
    )
    op.create_unique_constraint(
        "uq_tenant_user_role",
        "role_access",
        ["tenant_id", "user_id", "identity_role_id"],
    )
    op.drop_constraint(
        "role_access_identity_role_id_fkey", "role_access", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "role_access",
        "identity_role",
        ["identity_role_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("role_access", "deleted")
    op.drop_column("role_access", "created_at")
    op.drop_column("role_access", "created_by")
    op.add_column("tenant", sa.Column("deleted_at", sa.DateTime(), nullable=True))
    op.add_column("users", sa.Column("deleted_at", sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "deleted_at")
    op.drop_column("tenant", "deleted_at")
    op.add_column(
        "role_access",
        sa.Column("created_by", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "role_access",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "role_access",
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "role_access", type_="foreignkey")
    op.create_foreign_key(
        "role_access_identity_role_id_fkey",
        "role_access",
        "identity_role",
        ["identity_role_id"],
        ["id"],
    )
    op.drop_constraint("uq_tenant_user_role", "role_access", type_="unique")
    op.drop_constraint("uq_tenant_group_role", "role_access", type_="unique")
    op.drop_column("request_comment", "deleted_at")
    op.drop_column("request", "deleted_at")
    op.add_column(
        "identity_role",
        sa.Column("created_by", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "identity_role",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "identity_role",
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint("uq_tenant_role_arn", "identity_role", type_="unique")
    op.drop_column("groups", "deleted_at")
    op.drop_column("group_memberships", "deleted_at")
    op.add_column(
        "aws_account",
        sa.Column("created_by", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "aws_account",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "aws_account",
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "aws_account", type_="foreignkey")
    op.drop_constraint("uq_tenant_number", "aws_account", type_="unique")
    op.drop_column("aws_account", "tenant_id")
    # ### end Alembic commands ###
