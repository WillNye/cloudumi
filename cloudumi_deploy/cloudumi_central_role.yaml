Resources:
  CloudUmiTaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - arn:aws:iam::259868150464:role/NoqClusterRole1
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalIDParameter
      RoleName: !Join
        - "-"
        - - "cloudumi-central-role"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Policies:
        - PolicyName: !Join
            - "-"
            - - "cloudumi-central-acct-policy-ecs"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "access-analyzer:*"
                  - "cloudtrail:*"
                  - "cloudwatch:*"
                  - "config:SelectResourceConfig"
                  - "config:SelectAggregateResourceConfig"
                  - "dynamodb:batchgetitem"
                  - "dynamodb:batchwriteitem"
                  - "dynamodb:deleteitem"
                  - "dynamodb:describe*"
                  - "dynamodb:getitem"
                  - "dynamodb:getrecords"
                  - "dynamodb:getsharditerator"
                  - "dynamodb:putitem"
                  - "dynamodb:query"
                  - "dynamodb:scan"
                  - "dynamodb:updateitem"
                  - "dynamodb:CreateTable"
                  - "dynamodb:UpdateTimeToLive"
                  - "sns:createplatformapplication"
                  - "sns:createplatformendpoint"
                  - "sns:deleteendpoint"
                  - "sns:deleteplatformapplication"
                  - "sns:getendpointattributes"
                  - "sns:getplatformapplicationattributes"
                  - "sns:listendpointsbyplatformapplication"
                  - "sns:publish"
                  - "sns:setendpointattributes"
                  - "sns:setplatformapplicationattributes"
                  - "sts:assumerole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ses:sendmail"
                  - "ses:sendrawemail"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "autoscaling:Describe*"
                  - "cloudwatch:Get*"
                  - "cloudwatch:List*"
                  - "config:BatchGet*"
                  - "config:List*"
                  - "config:Select*"
                  - "ec2:DescribeSubnets"
                  - "ec2:describevpcendpoints"
                  - "ec2:DescribeVpcs"
                  - "iam:GetAccountAuthorizationDetails"
                  - "iam:ListAccountAliases"
                  - "iam:ListAttachedRolePolicies"
                  - "ec2:describeregions"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketTagging"
                  - "s3:ListAllMyBuckets"
                  - "s3:ListBucket"
                  - "s3:PutBucketPolicy"
                  - "s3:PutBucketTagging"
                  - "sns:GetTopicAttributes"
                  - "sns:ListTagsForResource"
                  - "sns:ListTopics"
                  - "sns:SetTopicAttributes"
                  - "sns:TagResource"
                  - "sns:UnTagResource"
                  - "sqs:GetQueueAttributes"
                  - "sqs:GetQueueUrl"
                  - "sqs:ListQueues"
                  - "sqs:ListQueueTags"
                  - "sqs:SetQueueAttributes"
                  - "sqs:TagQueue"
                  - "sqs:UntagQueue"
                Resource: "*"
  CloudUmiSnsCustomResource:
    Type: 'Custom::CloudUmiSnsCustomResource'
    DeletionPolicy: Retain
    Properties:
      ServiceToken: arn:aws:sns:us-east-1:259868150464:noq_registration
      IntegrationName: !Ref "AWS::StackName"
      ExternalId: !Ref ExternalIDParameter
      Host: !Ref HostParameter
      ActionType: "AWSCentralRegistration"
      Account: cloudumi
      TemplateVersion: 1.5
      AWSAccountId: !Ref "AWS::AccountId"
Parameters:
  ExternalIDParameter:
    Description: >-
      The cross-account access role created by the stack will use this value for
      its ExternalID. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "1224"
    AllowedPattern: '[\w+=,.@:\/-]*'
    ConstraintDescription: 'Invalid ExternalID value.  Must match pattern [\w+=,.@:\/-]*'
  HostParameter:
    Description: >-
      The host parameter. Do not change this value!
    Type: String
    MinLength: "2"
    MaxLength: "1224"
    AllowedPattern: '[\w+_-]*'
    ConstraintDescription: 'Invalid Host value.  Must match pattern [\w+_-]*'
Outputs:
  ExternalID:
    Description: ExternalID to share with NOQ on Cloudumi credential deployments
    Value: !Ref ExternalIDParameter
  Host:
    Description: Host to share with NOQ for CloudUmi deployment
    Value: !Ref HostParameter
